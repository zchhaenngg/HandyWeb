1.提取Common中的一些功能封装成HandyCommon。
2.Lambda表达式扩展封装成HandyLambdaExpression，拉分支并出包。
3.关于访问用户权限、角色一套进行封装HandyIdentity，拉分支并出包。 
  IdentityDbContext<TUser,TRole,TPermission,THistory>：HistoryDbContext<THistory>

1.HyContext需要封装成一个单独的dll,并拉分支，做成Package包。
2.用户、权限、角色的CodeFirst需要封装成一个单独的dll,并拉分支，做成Package包。
3.Lambda表达式构建需要封装成一个单独的dll，并拉分支，做成Package包。

Table的分页控件

应用层（Web）->Service层->Business、DAL即Domain层


Q1:DAL层中各个Repository应当返回如IQueryable等接口，由Business层决定具体实现？
A:好处如下拉框需要只需要显示name，则不需要返回所有数据，另外由具体业务层决定是否跟踪变更记录。
Q2：
1.用户列表查询
所有列表页等查询功能使用同一个静态UnitOfWork.AsNoTrack()完成

a.一个分页控件可以考虑封装成一个指令。
b.
    首页：首页方法
	下一页：下一页方法注意测试翻页
	上一页：上一页方法注意测试翻页
	末页：末页方法

a.通过bootstrap.js建立一个可以通用的分部视图，
    以支持对数据库的如Equal,In,Like,Greater,Less  查询
	注意：当前1.只支持所有组合And查询2.不支持跨表查询3.暂时直接使用Entity，不使用ViewModel
	因此  需要考虑的元素只有3个位  entity.property、比较方式、常量|entity.property
	          Property=>type,propertyName,Value
			  1.有property的name生成MemberExpression  完成
			  2.由MemberExpression和Value以及QueryMethod生成相应的Lambda实体
			      =>优化BaseLambda<TEntity, TProperty> -> BaseLambda<TEntity>  完成
			  3.Source和QueryModel 完成
			  4.优化所有GetPage4User等。
			    =>UnitOfManager.UserSouce.Where(QueryModel model).Select(new UserViewModel{}).ToList();  完成
			  5.分页功能
			  



a.使用Angular和bootstrap校验查询条件,以UserName为例。

b.根据UserName查询出结果。

c.如TFS ERP等查询可配置。

d.根据配置进行查询。

e.直接使用Entity进行查询

1.每个对外提供的API应当都有权限控制。

注意：UI库不再使用Easyui
2.密码过期

1.bug  email不是唯一时的提示不明确。即唯一性还要在校验中添加。
登陆
登出
使用QQ登陆

3.工作流
initial,Current、Forword、Back、end、bookstackitem
a.history
b.人工干预

2.暂缓 
  .And(IsNotEmpty.For(query.UserNameLike), LikeLambda<AuthUser>.For(o => o.UserName, query.UserNameLike))
      ->AndIf(bool condition, params[] BaseLambda lambda);
	  ->AndIf(bool condition, Expression expression);

	  ->AndIfThen(bool condition, BaseLambda ifLambda, BaseLambda thenLambda);
	  ->AndIfThen(bool condition, Expression ifExpression, Expression thenExpression);

3.用户列表页

5.在DAL层上UIBusiness中增加Service层。---考虑中---
a.UIBusiness可以调用Service层也可以直接调用DAL层;Service层可以调用DAL层。
由Web层输出，UIBusiness接收输入参数，DAL层或Service层执行。
由Win服务输出、Service层执行

6.Easyui的控件研究

1.DbFirst->CodeFirst
是否支持视图

2.DateTime->系统存UTC时间
d.存入服务的所有时间必须是UTCTime. 
e.显示在界面上的所有时间必须是LogicTime

3.ViewModel中时间都应当使用UTCTime,以便动态转换成其他本地时间显示。

4.查询项动态构建

5.设置语言CultureInfo
https://localhost/zh-cn/Home/Index

6.界面库 Easyui结合LigerUI使用

8.Word导出。
D:\MyGitHub\HandyWeb\HandyWork.Common\ExternLibs\OpenXml\WordUtility.cs

9.PDF导出。

10.各种报表-未来必然是大数据时代，数据分析，报表必然前途无量。

11.权限根据业务进行大类分组,每个业务都应有相应的管理员

12.AOP拦截器。

13.Web聊天。研究signalr。做出Web聊天程序。

14.耗费时间的查询应当支持异步查询。

15.反馈渠道

BUG.
D:\MyGitHub\HandyWeb\HandyWork.Common\Helper\EnumHelper.cs,LookupResource方法。
本地资源文件中的CultureInfo应该获取当前线程中的CultureInfo