Q1:DAL层中各个Repository应当返回如IQueryable等接口，由Business层决定具体实现？
A:好处如下拉框需要只需要显示name，则不需要返回所有数据，另外由具体业务层决定是否跟踪变更记录。
Q2：
任务一：
1.重构校验  
当前校验方式：各个Entity的Repository中提供的校验方法，抛出校验的错误信息。
重构方案：不使用当前在BaseRepository中Validate的方法，参考下方文档，利用EntityFramework提供几种校验方式
https://msdn.microsoft.com/en-us/data/gg193959.aspx
a.重构UnitOfWork.SaveChanges();  完成
返回int 表示成功，否则抛出异常。
b.删除Error类，在EntityFramework中DBContext已经有类似功能了。  完成
c.UnitOfWork为EntityContext的包装类，针对Validation应当有自己的实现。同时屏蔽外面对EntityContext的直接操作。 完成
最基本的增删改由UnitOfWork完成，Repository中不再操作EntityContext 完成
2.重构记录操作历史  完成

3.重构OnBeforeAdd和OnBeforeUpdate 完成

4.各个Entity的Repository中提供各种各样的IQueryable结果，由调用层决定使用合适的序列化对象，不再必须统一先查询出Entity了。

5.在DAL层上UIBusiness中增加Service层。
a.UIBusiness可以调用Service层也可以直接调用DAL层;Service层可以调用DAL层。
由Web层输出，UIBusiness接收输入参数，DAL层或Service层执行。
由Win服务输出、Service层执行

6.Easyui的控件研究

1.DbFirst->CodeFirst
是否支持视图

2.DateTime->系统存UTC时间
d.存入服务的所有时间必须是UTCTime. 
e.显示在界面上的所有时间必须是LogicTime

3.ViewModel中时间都应当使用UTCTime,以便动态转换成其他本地时间显示。

4.查询项动态构建

5.设置语言CultureInfo
https://localhost/zh-cn/Home/Index

6.界面库 Easyui结合LigerUI使用

7.主页模仿桌面
http://ligerui.com/demos/dialog/win7.htm

8.Word导出。
D:\MyGitHub\HandyWeb\HandyWork.Common\ExternLibs\OpenXml\WordUtility.cs

9.PDF导出。

10.各种报表-未来必然是大数据时代，数据分析，报表必然前途无量。

11.权限根据业务进行大类分组,每个业务都应有相应的管理员

12.AOP拦截器。

13.Web聊天。研究signalr。做出Web聊天程序。

14.耗费时间的查询应当支持异步查询。

15.反馈渠道

BUG.
D:\MyGitHub\HandyWeb\HandyWork.Common\Helper\EnumHelper.cs,LookupResource方法。
本地资源文件中的CultureInfo应该获取当前线程中的CultureInfo